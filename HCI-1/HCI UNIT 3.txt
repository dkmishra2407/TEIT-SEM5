HCI UNIT 3

 a)What are Norman’s seven principles for reducing complex jobs to simple
 one?

 b) How does making a call differ when using:
 Smart Cellphone
 Land line phone
 How have been these devices been designed to consider the following:
 The kind of users
 Types of activity being supported
 Contexts of use

-- > 
i) Smart Cellphone
Process:
Unlock the phone (e.g., via PIN, fingerprint, or face recognition).
Open the phone or contacts app.
Search or dial a number.
Press the call button.
Use on-screen controls for speaker, mute, or ending the call.

Features:

Supports voice and video calls.
Internet-based calling options (e.g., WhatsApp, Zoom, etc.).
Portability allows calls from virtually anywhere.


ii) Landline Phone

Process:
Pick up the receiver.
Dial the number (rotary or touch-tone keypad).
Wait for the connection to be established.
Speak into the receiver.
Hang up to end the call.

Features:
Fixed location.
Only supports voice calls.
Operates without a need for battery power.


Design Considerations for Users, Activities, and Contexts

1. The Kind of Users

Smart Cellphone:
Designed for tech-savvy users across all age groups but may favor younger generations who are comfortable with digital interfaces.
Customizable for accessibility (e.g., large icons, voice commands).
Multifunctional, supporting social, professional, and entertainment needs.

Landline Phone:
Simpler design for users with limited technical skills.
Often favored by older generations or for environments where simplicity and reliability are priorities.

2. Types of Activity Being Supported

Smart Cellphone:

Supports multitasking beyond calls (e.g., messaging, apps, video, gaming, internet).
Enables remote and global communication with advanced features like video calling.
Integration with calendars and reminders for scheduled calls.

Landline Phone:

Primarily designed for straightforward voice communication.
Reliable in emergency scenarios where power or internet may not be available.

3. Contexts of Use

Smart Cellphone:

Highly portable, allowing use in diverse environments (e.g., traveling, office, home).
Adapts to noisy surroundings with noise-cancellation features or headphones.
Usable in personal or professional contexts with secure communication features.

Landline Phone:

Restricted to specific locations due to fixed installation.
Designed for stable home or office environments.
Less susceptible to theft or loss, making it ideal for static settings.



 a)What exactly are mental models and why do they matter in interface
 design?

-->
A mental model is a person's internal representation or understanding of how a system, process, or concept works. These models are based on past experiences, knowledge, and assumptions and help people predict the behavior of systems and interact with them effectively.

In the context of interface design, a mental model refers to how users expect an interface to function based on their prior experiences with similar systems, devices, or interfaces.

Why Do Mental Models Matter in Interface Design?

1.Enhances Usability
Designing interfaces that align with users' mental models makes systems easier to learn and use. When the interface behaves as users expect, they require less effort to understand or adapt to it.

Example: A shopping cart icon for online purchases aligns with users' existing mental model of shopping in a store.

2)Reduces Cognitive Load
Interfaces that match users' mental models reduce the mental effort required to figure out how things work, allowing users to focus on their tasks rather than the mechanics of the interface.

Example: Familiar navigation patterns (e.g., a home icon for returning to the main page) save users from having to learn new systems.

3)Minimizes Errors
When users' mental models align with the design, they are less likely to make mistakes because they intuitively know what to do.

Example: A "drag and drop" feature for moving files mirrors the real-world action of moving objects, reducing confusion.

4)Improves Satisfaction and Trust
Interfaces that work as expected foster a positive user experience. When users feel confident and in control, they are more likely to trust the system.

Example: Users expect a responsive button to provide immediate feedback when clicked (e.g., highlighting or changing color).

5)Supports Efficient Problem Solving
Aligning designs with mental models helps users troubleshoot and resolve issues because they can apply logical reasoning based on their expectations.

How to Incorporate Mental Models in Interface Design
Understand Users' Expectations

Conduct user research to discover existing mental models (e.g., through interviews or usability testing).
Analyze similar systems or familiar metaphors to identify expectations.
Leverage Familiar Patterns

Use established conventions and design patterns (e.g., a trash can icon for delete).
Avoid introducing unfamiliar or overly complex interactions unless necessary.
Provide Clear Feedback

Offer visual, auditory, or haptic feedback to confirm actions and reassure users.
Support Learning and Adaptation

If a system requires users to learn a new model, provide clear guidance and onboarding to bridge the gap between the old and new models.




 b) Explain Low-fidelity and High-fidelity prototypes.

-->

Low-Fidelity and High-Fidelity Prototypes
Prototypes are simplified versions of a product used to test ideas, functionality, and design during the development process. Low-fidelity and high-fidelity prototypes differ in complexity, detail, and purpose.

Low-Fidelity Prototypes
Definition:
Low-fidelity prototypes are basic, rough representations of a design. They often focus on layout, structure, and general functionality without including detailed visuals or interactivity.

Characteristics:
Simple and Quick: Created using pen and paper, whiteboards, or basic digital tools.
Focus on Ideas: Emphasis on overall structure, flow, and concept, rather than details.
Low Detail: May consist of sketches, wireframes, or simple mockups.
Limited Interactivity: Can simulate navigation or workflows but lacks advanced features.
Inexpensive: Fast to create and easy to modify.
Advantages:
Encourages Exploration: Allows quick experimentation with different ideas.
Cost-Effective: Minimal time and resources required.
Open to Feedback: Easy for stakeholders to suggest changes without hesitation.
Good for Early Testing: Identifies basic issues in structure and navigation early on.
Limitations:
Doesn’t represent final design or functionality.
May not fully communicate design intent to non-technical stakeholders.
High-Fidelity Prototypes
Definition:
High-fidelity prototypes are detailed, polished representations of the final product. They closely mimic the appearance and functionality of the actual product.

Characteristics:
Detailed and Realistic: Includes typography, color schemes, images, and branding.
Advanced Interactivity: Simulates complex user interactions, including animations, transitions, and responsive elements.
Close to Final Product: Looks and behaves like the finished design.
Time-Consuming: Requires more effort and resources to build.
Advantages:
Realistic User Testing: Provides accurate insights into usability and user experience.
Stakeholder Approval: Helps stakeholders visualize the final product more effectively.
Reduces Ambiguity: Developers and designers get clear guidance on implementation.
Validates Design Choices: Allows evaluation of aesthetics and functionality together.
Limitations:
Time and resource-intensive.
Harder to make quick changes.
Risk of focusing too early on details instead of concepts.
When to Use Each Type
Low-Fidelity Prototypes:

Early stages of design when exploring ideas.
To test basic workflows, concepts, and structure.
When time and resources are limited.
High-Fidelity Prototypes:

Later stages of design to finalize details.
To test advanced interactivity and visual design.
To gather in-depth feedback from stakeholders or users.
Example Use Cases
Low-Fidelity: A hand-drawn wireframe of a mobile app showing how screens connect.
High-Fidelity: An interactive prototype of the app built with tools like Figma or Adobe XD, showcasing the final design and navigation.



 c)
 Write a short note on the following:
 Linguistic Model
 Physical and device Model

-->

Linguistic Model  (FOCUSES ON COMMUNICATION,LANGUAGES,MAINLY USED IN THE NLP)


The linguistic model in human-computer interaction (HCI) focuses on the communication and language used between the user and the system. It studies how users interpret, generate, and interact with language-based interfaces. This model is especially important in systems involving commands, natural language processing, or dialogue interfaces.

Key Features:

1.Examines the vocabulary, syntax, and semantics of user commands.
2.Considers how users form mental models of system commands or language prompts.
3.Guides the design of intuitive command structures, labels, and conversational agents (e.g., chatbots, voice assistants).
4. FOCUSE ON THE CLARITY,TERMINOLOGY
Example:

A voice assistant like Siri uses linguistic models to process natural language input ("Set an alarm for 6 AM") and provide a meaningful output or action.

Physical and Device Model ( physical interactions between the user and the hardware or device )


The physical and device model focuses on the physical interactions between the user and the hardware or device. It considers how users manipulate input devices (e.g., keyboards, touchscreens, or controllers) and how the system provides output through physical components (e.g., displays, speakers).

Key Features:
Explores ergonomic factors like size, weight, and form factor.
Examines how users interact with controls like buttons, touch gestures, or sensors.
Emphasizes accessibility and comfort in device design.

Example:
A smartphone touchscreen supports swiping, tapping, and pinching gestures for navigation, designed to fit natural hand movements.
A game controller is shaped to fit comfortably in users' hands with intuitive button placement.
Both models contribute to the design of effective, user-friendly systems by addressing communication and interaction at different levels.

 a) What are User Profiles explain with example?

-->

A user profile is a representation of a specific type of user or user group that includes key characteristics, needs, behaviors, and goals. User profiles are used in product design, development, and marketing to ensure that the system or service is tailored to the intended audience. They help teams understand the target audience, prioritize features, and make design decisions that enhance usability and satisfaction.

Components of a User Profile
Demographics: Age, gender, education level, profession, and location.
Goals and Needs: What users aim to achieve by using the product or system.
Technical Expertise: Skill level with technology (e.g., beginner, intermediate, advanced).
Behavior Patterns: How users interact with similar products or services.
Pain Points: Challenges or frustrations faced by the user.
Context of Use: When, where, and how the product will be used.
Example of a User Profile
Product: E-learning Platform for Programming Skills
User Profile: "Aspiring Developer"

Name: Alex Johnson

Demographics:

Age: 22
Gender: Male
Location: New York, USA
Occupation: College Student (Computer Science major)
Goals and Needs:

Wants to learn Python programming for a future career in data science.
Needs beginner-friendly tutorials with hands-on practice projects.
Technical Expertise:

Familiar with basic coding but new to advanced concepts.
Behavior Patterns:

Spends 2–3 hours per day on self-learning platforms like YouTube and Codecademy.
Prefers bite-sized lessons and interactive exercises.
Pain Points:

Finds text-heavy tutorials difficult to follow.
Gets overwhelmed by too many course options without clear guidance.
Context of Use:

Primarily learns at home on a laptop. Occasionally uses a tablet while commuting.
Importance of User Profiles
Improved User Experience: Helps design interfaces and features that align with user needs.
Targeted Communication: Enables better marketing strategies by understanding user demographics and behaviors.
Feature Prioritization: Ensures resources are spent on features that address real user pain points.
Personalization: Allows tailoring of content or recommendations to specific user types.



 b) Hierarchical task analysis (HTA) is used to describe the interactions
 between a user & software system. Draw & explain HTA to online bus
 reservation system?

-->

Hierarchical Task Analysis (HTA) breaks down a task into subtasks, operations, and actions in a hierarchical structure. The goal is to understand the steps a user takes to achieve a specific goal, such as booking a bus ticket online.

   Book a bus ticket online  
   ├── 1. Search for available buses  
   │      ├── 1.1 Open the online platform  
   │      ├── 1.2 Enter travel details  
   │      └── 1.3 View available buses  
   ├── 2. Select a preferred bus and seat  
   │      ├── 2.1 Review bus options  
   │      ├── 2.2 Choose a bus  
   │      └── 2.3 Select a seat  
   ├── 3. Enter passenger details  
   │      ├── 3.1 Fill in passenger details  
   │      └── 3.2 Add special preferences  
   ├── 4. Make payment  
   │      ├── 4.1 Choose payment method  
   │      ├── 4.2 Enter payment details  
   │      └── 4.3 Confirm payment  
   └── 5. Receive ticket confirmation  
          ├── 5.1 View confirmation  
          └── 5.2 Receive e-ticket

HTA for Online Bus Reservation System
Main Goal (0): Book a bus ticket online.

Breakdown

1. Search for available buses
1.1 Open the online bus reservation platform (website or app).
1.2 Enter travel details (source, destination, date).
1.3 View the list of available buses.

2. Select a preferred bus and seat
2.1 Review bus options (e.g., timing, type of bus, amenities, fare).
2.2 Choose a bus.
2.3 Select a seat from the seating layout.

3. Enter passenger details
3.1 Fill in passenger name, age, and contact details.
3.2 Add any special preferences (e.g., wheelchair access).

4. Make payment
4.1 Choose a payment method (e.g., credit card, PayPal, or UPI).
4.2 Enter payment details.
4.3 Confirm payment and complete the transaction.

5. Receive ticket confirmation
5.1 View the booking confirmation on the screen.
5.2 Receive the e-ticket via email or SMS.


 a) Explain Norman’s 7 stage model with example.
-->


Norman's Seven-Stage Model of Interaction

Donald Norman's seven-stage model explains the cognitive processes a user goes through when interacting with a system or product. It highlights the steps from forming an intention to completing an action and receiving feedback. This model is essential for understanding usability and designing intuitive systems.

The Seven Stages

Goal
The user identifies what they want to achieve.

Example: A user wants to book a flight online.

Forming the Intention
The user decides on the action required to achieve their goal.

Example: The user decides to visit a flight booking website.

Specifying the Action
The user determines the specific steps needed to perform the action.

Example: The user decides to search for flights by entering departure and destination cities, travel dates, and passenger details.

Executing the Action
The user performs the specified actions using the system.

Example: The user enters the required information into the flight search form and clicks "Search."

Perceiving the State of the World
The system provides feedback about the result of the user’s action.

Example: The system displays a list of available flights matching the user’s criteria.

Interpreting the State of the World
The user interprets the feedback to assess whether it matches their expectation.
Example: The user reviews the flight options to ensure they align with their preferences (e.g., timing, price).

Evaluation
The user evaluates whether the result satisfies their goal.

Example: The user confirms a suitable flight and proceeds to book it if satisfied.

Example Breakdown: Using an ATM to Withdraw Money


Goal: The user wants to withdraw $100 from their bank account.

Forming the Intention: The user decides to use the ATM for the withdrawal.

Specifying the Action: The user determines they need to insert their card, enter the PIN, and select the withdrawal amount.

Executing the Action: The user inserts their card, inputs the PIN, selects "Withdraw," and enters $100.

Perceiving the State of the World: The ATM displays a confirmation message and dispenses $100.

Interpreting the State of the World: The user sees the cash and receipt, confirming the withdrawal was successful.

Evaluation: The user evaluates the outcome, confirming the goal was achieved.

Why This Model Matters


Identifies Usability Issues: Breaks down where users might face problems (e.g., unclear feedback in "Perceiving the State of the World").

Improves User-Centered Design: Ensures designs support user goals and minimize cognitive effort at every stage.

Provides a Framework for Testing: Helps designers focus on how users progress through tasks and where improvements are needed.



 b) Differentiate between Goals Vs Tasks. How does GOMS help in
 improving usability? Draw GOMS for CLOSE-WINDOW

 a)User Profiles are very important from design point of view. Interface with
 such profiles is helpful. Justify your answer?
 b) Hierarchical task analysis (HTA) is used to describe the interactions
 between a user & software system. Draw & explain HTA to online bus
 reservation system?

 b) How does GOMS help in improving usability? Draw GOMS for CLOSE
WINDOW. Differentiate between Goals Vs Tasks.

-->

GOMS (Goals, Operators, Methods, and Selection rules) is a user modeling technique used to evaluate the efficiency of human-computer interaction. It provides a structured way to analyze the user's actions required to achieve a goal, focusing on speed, accuracy, and effort.

GOMS for Closing a Window
Goal: Close the application window.

Operators:

Move the cursor.
Click a mouse button.
Press keyboard keys.
Methods:

Method 1 (Mouse):

M1.1: Move cursor to the "X" button in the top-right corner.
M1.2: Click the "X" button.
Method 2 (Keyboard):

M2.1: Press Alt+F4 on the keyboard.
Method 3 (Menu):

M3.1: Click on the File menu.
M3.2: Select "Close" from the dropdown.
Selection Rules:

If using a mouse, apply Method 1.
If a keyboard shortcut is known, apply Method 2.
If no other options are clear, apply Method 3.


Goal: Close the window
├── Method 1 (Mouse)
│     ├── Move cursor to "X" button
│     └── Click the "X" button
├── Method 2 (Keyboard)
│     └── Press Alt+F4
└── Method 3 (Menu)
      ├── Click File menu
      └── Select "Close"


Evaluates Efficiency: By analyzing each method, GOMS can determine which is faster or requires fewer steps.
Identifies User Preference: Some users may prefer shortcuts, while others rely on visual cues like buttons.
Improves Design: If one method (e.g., menu navigation) is overly complex, the design can be simplified to match the most efficient method.


 Q2) a) Differentiate User Profiles with respect to Interface design with example.

 b) How does Diagrammatic dialog design notations help designers to design
 better interfaces. Justify your answer with an example.
-->

Diagrammatic dialog design notations are visual tools like flowcharts, state transition diagrams, and storyboards that map user-system interactions. These tools help designers structure and optimize interfaces.

HOW Diagrammatic Notations Help Designers

Visual Clarity:

Designers can visualize the entire interaction flow, including steps, decisions, and feedback loops.
This ensures a clear and logical sequence for user actions.

Error Prevention:

Diagrams help identify potential bottlenecks, dead ends, or unnecessary steps in the interaction.
Designers can refine the process to eliminate confusion.

Early Testing:

Interaction flows can be shared with users or stakeholders to test and validate designs early in the process.
This saves time and resources by avoiding costly iterations later.

Collaboration and Communication:

Diagrammatic notations make it easier for designers, developers, and stakeholders to collaborate, as they provide a shared visual language.


WRITE EXAMPLE OF THE FLOW CHART OF THE ATM  ATM Interface Design  (DOWNLOADS)
