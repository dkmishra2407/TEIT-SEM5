That's a lot of questions! Let's go through each one, step-by-step:

### 1. **What is CSS?**
   CSS (Cascading Style Sheets) is a style sheet language used to describe the presentation of a document written in HTML or XML. CSS defines how HTML elements are to be displayed on screen, paper, or in other media.

### 2. **Different Types of CSS**
   - **Inline CSS**: Added directly to HTML elements via the `style` attribute.
   - **Internal (Embedded) CSS**: Defined within a `<style>` tag in the `<head>` section of an HTML page.
   - **External CSS**: Stored in an external file with a `.css` extension and linked to the HTML document with a `<link>` tag.

### 3. **What is the Box Model in CSS?**
   The CSS box model is a concept that wraps elements in a box consisting of `content`, `padding`, `border`, and `margin`. It’s used to determine the layout and spacing around elements.

### 4. **Advantages of Using CSS**
   - **Separation of content and design**: Allows easier updates and changes to design.
   - **Reusability**: Styles can be reused across multiple HTML pages.
   - **Accessibility**: Makes websites more accessible by controlling presentation for different screen readers and devices.

### 5. **Limitations of CSS**
   - Limited layout control compared to some other technologies.
   - Browser compatibility issues.
   - Dependency on HTML structure, which can make debugging difficult.

### 6. **How to Include CSS in a Webpage**
   - **Inline CSS**: `<h1 style="color: blue;">Hello World</h1>`
   - **Internal CSS**: `<style> h1 { color: blue; } </style>`
   - **External CSS**: `<link rel="stylesheet" href="styles.css">`

### 7. **Types of Selectors in CSS**
   - **Universal Selector** (`*`): Selects all elements.
   - **Element Selector** (`h1, p, etc.`): Selects elements by name.
   - **Class Selector** (`.className`): Selects elements by class.
   - **ID Selector** (`#idName`): Selects elements by ID.
   - **Attribute Selector** (`[type="text"]`): Selects elements with a specific attribute.

### 8. **What is VH/VW in CSS?**
   - **VH (Viewport Height)**: Represents a percentage of the viewport height.
   - **VW (Viewport Width)**: Represents a percentage of the viewport width.

### 9. **Reset vs Normalize CSS**
   - **Reset CSS**: Removes all default browser styling.
   - **Normalize CSS**: Maintains some default styling to create a consistent baseline across browsers.

### 10. **Difference Between Inline, Inline-Block, and Block Elements**
   - **Inline**: Only takes up as much width as its content and does not start on a new line.
   - **Inline-Block**: Takes up only as much width as content, like inline, but allows setting width and height.
   - **Block**: Takes up the full width of its container and starts on a new line.

### 11. **Is It Important to Test Webpages in Different Browsers?**
   Yes, because different browsers may render CSS differently. Cross-browser testing ensures a consistent user experience.

### 12. **Pseudo-elements and Pseudo-classes**
   - **Pseudo-elements**: Used to style specific parts of an element, such as `::before` and `::after`.
   - **Pseudo-classes**: Applied based on the element’s state, like `:hover`, `:focus`, and `:visited`.

### 13. **Does Margin-Top or Margin-Bottom Affect Inline Elements?**
   No, inline elements do not affect `margin-top` and `margin-bottom`; only block elements do.

### 14. **Property to Change Font Face**
   Use `font-family`: `font-family: Arial, sans-serif;`

### 15. **Adaptive Design vs. Responsive Design**
   - **Adaptive Design**: Creates multiple layouts for different screen sizes.
   - **Responsive Design**: Uses flexible grids and CSS media queries to adjust a single layout for various screens.

### 16. **Border-Box vs. Content-Box**
   - **Border-box**: Includes `padding` and `border` within an element’s width and height.
   - **Content-box**: Width and height only include the content, excluding padding and border.

### 17. **Properties of Flexbox**
   - `display: flex;`
   - `flex-direction`, `justify-content`, `align-items`, `flex-wrap`, and `align-content`.

### 18. **What is Cascading in CSS?**
   Cascading refers to how CSS applies multiple rules to an element, with precedence given to rules based on source order, specificity, and importance.

### 19. **Center Align a Div Inside Another Div**
   - Using `margin`: `margin: auto;`
   - Using `flexbox`: `display: flex; align-items: center; justify-content: center;`

### 20. **Ways to Hide Elements in CSS**
   - `display: none;`
   - `visibility: hidden;`
   - `opacity: 0;`
   - `height: 0; width: 0;`

### 21. **What Does Accessibility Mean?**
   Accessibility means designing web content to be usable for all people, including those with disabilities.

### 22. **Restoring Default Value of a Property**
   Use `initial` or `unset` values: `property: initial;`

### 23. **CSS Grid vs. Flexbox**
   - **Flexbox**: Good for one-dimensional layouts (either row or column).
   - **CSS Grid**: Ideal for two-dimensional layouts (both rows and columns).

### 24. **What is Padding?**
   Padding is the space between an element's content and its border.

### 25. **What is Navigation?**
   Navigation refers to links and menus that allow users to move between sections or pages on a website.

### 26. **Assignment 6 (CO5: Implement User-Interface Design Using Web Technology)**
   This is likely a course-related assignment on creating UI designs with HTML, CSS, and possibly JavaScript.

### 27. **What is CMS?**
   A Content Management System (CMS) allows users to create, manage, and modify content on a website without coding knowledge.

### 28. **Advantages of CMS**
   - User-friendly interface.
   - Easy collaboration and content management.
   - Efficient content scheduling and publishing.

### 29. **Tools for CMS Development**
   - **WordPress**, **Joomla**, **Drupal**, **Magento**, and **Shopify**.

### 30. **Purpose of CMS**
   To simplify website management, making it easier to edit and publish content without extensive technical knowledge.

### 31. **Types of CMS**
   - **Open-source** (e.g., WordPress, Joomla)
   - **Proprietary** (e.g., Squarespace, Wix)
   - **SaaS** (e.g., Shopify)
   - **Headless CMS** (e.g., Contentful, Strapi)

### 32. **Passing a Variable by Value in WordPress**
   Use PHP global variables or WordPress functions to pass data between PHP functions.

### 33. **What is is_page() in CMS?**
   The `is_page()` function checks if the current page matches a specified page in WordPress.

### 34. **How WordPress is Used for Interactive Websites**
   WordPress allows the use of plugins, themes, and custom code to add interactivity, such as forms, galleries, and dynamic content.

### 35. **Steps to Deploy a Website on Web Server**
   - **Upload files** to the server.
   - **Configure the server settings**.
   - **Set up the database**.
   - **Point the domain** to the server’s IP address.

### 36. **Concept of Parking a Website**
   Parking a website means reserving a domain name without building or hosting an active site, often for future use.